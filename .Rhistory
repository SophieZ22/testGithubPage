ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200,1200]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=10)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [200,1200]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=10)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2, subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200,2000]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=10)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [50,1000]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=10)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2, subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [50,2000]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=10)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [50,3000]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=10)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2, subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [50,2000]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [50,3000]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=20)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2, subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [50,5000]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [50,4000]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=20)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2, subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=18, fmt='%1.0f', inline_spacing=20)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2, subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=12, fmt='%1.0f', inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=12, fmt='%1.0f', inline_spacing=20)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2, subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=15, fmt='%1.0f', inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=12, fmt='%1.0f', inline_spacing=20)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2, subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', inline_spacing=20)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2,figsize=(12, 5)， subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', inline_spacing=20)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2,figsize=(12, 5), subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
ax1.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
ax2.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', inline_spacing=20)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2,figsize=(12, 5), subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
manual_locations = [(lon[i, j], lat[i, j]) for i, j in [(1500, 1500), (500, 500)]]
ax1.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', manual=manual_locations,inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
manual_locations = [(lon[i, j], lat[i, j]) for i, j in [(1500, 1500), (500, 500)]]
ax2.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', manual=manual_locations,inline_spacing=20)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2,figsize=(12, 5), subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
manual_locations = [(lon[i, j], lat[i, j]) for i, j in [(1000, 1000), (500, 500)]]
ax1.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', manual=manual_locations,inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
manual_locations = [(lon[i, j], lat[i, j]) for i, j in [(1500, 1500), (500, 500)]]
ax2.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', manual=manual_locations,inline_spacing=20)
plt.show()
import matplotlib as mpl
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import numpy as np
import xarray as xr
import rioxarray as rxr
# 基础轮廓
fig, axs = plt.subplots(1, 2,figsize=(12, 5), subplot_kw={'projection': ccrs.PlateCarree()})
extent = (106, 127, 17, 41)
for ax in axs:
ax.set_extent(extent,crs=ccrs.PlateCarree())
ax.add_feature(cfeature.LAND,facecolor='grey')
ax.add_feature(cfeature.OCEAN,facecolor='lightblue')
ax.add_feature(cfeature.COASTLINE,edgecolor='DarkSlateGray')
# 读取高程图
file_path="ETOPO_2022_v1_60s_N90W180_bed.tif"
dem_ds=rxr.open_rasterio(file_path)
data0 = dem_ds[0]
data0=xr.where(data0<0,-data0,np.nan)
[ax1,ax2]=axs
# 对于ax1，纬度倒转
lons=dem_ds.x.values
lats=np.flip(dem_ds.y.values) # 倒转纬度
# lats=dem_ds.y.values[::-1, :] # 另一种方法
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax1.contour(lon, lat, data0[::-1, :], levels=data_values,colors='b')
manual_locations = [(lon[i, j], lat[i, j]) for i, j in [(1000, 1000), (500, 500)]]
ax1.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', manual=manual_locations,inline_spacing=20)
# 对于ax2，不做其他操作
lons=dem_ds.x.values
lats=dem_ds.y.values
lon, lat = np.meshgrid(lons, lats)
data_values = [200]
cs = ax2.contour(lon, lat, data0[:, :], levels=data_values,colors='g')
manual_locations = [(lon[i, j], lat[i, j]) for i, j in [(1000, 1000), (500, 500)]]
ax2.clabel(cs, inline=True, fontsize=14, fmt='%1.0f', manual=manual_locations,inline_spacing=20)
plt.show()
